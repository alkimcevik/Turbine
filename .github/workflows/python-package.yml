name: 'Turbine CI'

on:
  push: 
    branches: [ master ]
  #schedule:
    #- cron: "45 11 * * 1"
  workflow_dispatch:
jobs:
  build:

    env:
      PY_COLORS: "1"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade wheel
        pip install -r requirements.txt
    - name: Install SeleniumBase
      run: |
        python setup.py install
    # - name: Lint with flake8
      # run: |
        # pip install flake8
        # Stop the build if there are flake8 issues
        # flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome and Firefox
      run: |
        sudo apt install google-chrome-stable
        sudo apt-get install firefox
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver and geckodriver (Firefox Webdriver)
      run: |
        seleniumbase install chromedriver
        seleniumbase install geckodriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    #- name: Make sure nosetests is working
    #  run: |
    #    echo "def test_2(): pass" > nothing2.py
    #    nosetests nothing2.p
    - name: Turbine Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env: 
        SLACK_CHANNEL: test_reports
        #SLACK_MESSAGE: "Turbine GH report"
        SLACK_TITLE: Turbine Test Results
        SLACK_WEBHOOK: ${{ secrets.TURBINE }}
        SLACK_USERNAME: incoming-webhook  
    
    
    - name: Run pytest nypl_tests/test_search_filter.py
      continue-on-error: true
      run: |
        pytest examples/nypl_tests/test_search_filter.py --browser=chrome --headless -v -s
        
        
    - name: Run pytest nypl_tests/test_sign_up.py
      continue-on-error: true
      run: |
        pytest examples/nypl_tests/test_sign_up.py --browser=chrome --headless -v -s
        
        
    - name: Run pytest examples/nypl_tests/test_book_recommendations.py
      continue-on-error: true
      run: |
        pytest examples/nypl_tests/test_book_recommendations.py --browser=chrome --headless -v -s
        
        
    - name: Run pytest examples/nypl_tests/test_homepage.py
      continue-on-error: true
      run: |
        pytest examples/nypl_tests/test_homepage.py --browser=chrome --headless -v -s
        
        
    - name: Run pytest examples/nypl_tests/test_mobile.py
      continue-on-error: true
      run: |
        pytest examples/nypl_tests/test_mobile.py --browser=chrome --headless -v -s --mobile
        


